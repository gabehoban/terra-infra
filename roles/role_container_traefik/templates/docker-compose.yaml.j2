# code: language=ansible
name: "{{ composition_name }}"
services:
  reverseproxy:
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    image: traefik:latest
    env_file: .environment_vars
    labels:
      # Traefik-ception so that Traefik is provided via Traefik
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.backend=traefik"
      # Allow dashboard access via traefik.{{ansible_hostname}}.lab4.cc
      - "traefik.http.routers.dashboard.rule=Host(`traefik.{{ ansible_hostname }}.lab4.cc`)"
      - "traefik.http.routers.dashboard.service=dashboard@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=HomelabCA"
      # Allow API access via traefik.{{ansible_hostname}}.lab4.cc
      - "traefik.http.routers.api.rule=Host(`traefik.{{ ansible_hostname }}.lab4.cc`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=HomelabCA"
    volumes:
      - "{{ composition_root }}/traefik.yaml:/etc/traefik/traefik.yaml"
      - "{{ composition_root }}/HomelabCA:/HomelabCA"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  whoami:
    container_name: whoami
    ports:
      - "127.0.0.1:8888:80"
    image: traefik/whoami
    restart: unless-stopped
    env_file: .environment_vars
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.{{ ansible_hostname }}.lab4.cc`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=HomelabCA"
    volumes:
      - /etc/localtime:/etc/localtime:ro
