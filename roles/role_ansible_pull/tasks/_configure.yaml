# NOTE
# If the machine has not been bootstrapped then this needs to be
# run intially from a remote controller, due to installing
# passwords and dependencies. After the initial run ansible-pull
# will function as expected.

- name: Add ansible password
  ansible.builtin.lineinfile:
    name: "{{ role_ansible_pull_workdir }}/.vault_password"
    line: "{{ vault_ansible_password }}"
    mode: "0644"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: present
    create: true

- name: Make project in /opt/ansible
  ansible.builtin.file:
    state: directory
    path: "{{ role_ansible_pull_workdir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0744"

- name: Make project in /opt/ansible/galaxy-roles
  ansible.builtin.file:
    state: directory
    path: "{{ role_ansible_pull_workdir }}/galaxy-roles"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0744"

- name: Clone initial copy of repo
  ansible.builtin.git:
    repo: "{{ repo_url }}"
    dest: "{{ role_ansible_pull_workdir }}/{{ repo_name }}"
    clone: true
    update: true
  register: repo_installation_path
  changed_when: false

- name: Stat .ansible-galaxy-installed.lock
  ansible.builtin.stat:
    path: "{{ role_ansible_pull_workdir }}/.ansible-galaxy-installed.lock"
  register: installlock_raw

- name: Register installation var
  ansible.builtin.set_fact:
    installed: "{{ installlock_raw.stat.exists }}"

- name: Run initial requirements install - collections
  ansible.builtin.command: "ansible-galaxy collection install -r {{ role_ansible_pull_workdir }}/{{ repo_name }}/ansible/meta/requirements.yaml -p {{ role_ansible_pull_workdir }}/galaxy-roles"
  timeout: 3600
  register: collections_install_output
  changed_when: collections_install_output.rc != 0
  when: not installed

- name: Run initial requirements install - roles
  ansible.builtin.command: "ansible-galaxy install -r {{ role_ansible_pull_workdir }}/{{ repo_name }}/ansible/meta/requirements.yaml -p {{ role_ansible_pull_workdir }}/galaxy-roles"
  timeout: 3600
  register: roles_install_output
  changed_when: roles_install_output.rc != 0
  when: not installed

- name: Mark initial install of galaxy as completed
  ansible.builtin.file:
    state: touch
    path: "{{ role_ansible_pull_workdir }}/.ansible-galaxy-installed.lock"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0744"
  when: not installed

- name: Cron to run ansible-galaxy update weekly
  ansible.builtin.cron:
    name: "ansible-galaxy"
    job: "ansible-galaxy install -f -r {{ role_ansible_pull_workdir }}/{{ repo_name }}/ansible/meta/requirements.yaml -p {{ role_ansible_pull_workdir }}/galaxy-roles"
    state: absent
    special_time: weekly

- name: Ensure scripts are populated from templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ role_ansible_pull_workdir }}/{{ item.path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  with_community.general.filetree: templates/scripts/
  when: item.state == 'file'

# Run scripts via specified cron schedule
- name: Cron to run ansible-pull frequently
  ansible.builtin.cron:
    name: "ansible-pull"
    job: "{{ role_ansible_pull_workdir }}/ansible-pull-full.sh"
    state: present
    minute: "{{ role_ansible_pull_cron_minute }}"
    hour: "{{ role_ansible_pull_cron_hour }}"
  when: role_ansible_pull_install_pull_cron
